<html>
<head>
   <link rel="SHORTCUT ICON" href="favjavancss.ico" />
   <title>JavaNCSS - A Source Measurement Suite for Java</title>
</head>
<body>
<table width="100%" bgcolor="#C0C0C0">
<tr>
<td>
<table width="100%" bgcolor="#374B5D">
<tr>
<td>
<center>&nbsp;</center>
<center><h1>JavaNCSS - A Source Measurement Suite for Java</h1></center>
</td>
</tr>
</table>
</td>
</tr>
</table>
&nbsp;

<br />Ever wondered how many lines of code or how many classes there are
in&nbsp; the Sun JDK? Curious about the size of your own projects - or
do you want to keep track of your work-progress. That's what JavaNCSS is
for.

<p>JavaNCSS is a simple command line utility which measures two standard
source code metrics for the Java programming language. The metrics are
collected globally, for each class and/or for each function.</p>

<p>Here is an example about what JavaNCSS prints out for the Sun JDK 1.1.5
<a href="package.txt">java.*</a> source tree (update: JDK 1.5 api source tree
consists of 569'830 ncss).</p>

<p>JavaNCSS can optionally present its output with a little
<a href="gui.html">graphical user interface</a>. To interactively select Java source
files for counting, <a href="http://www.kclee.de/clemens/jacob/">Jacob</a> (a Java class browser and project
manager) can be used for this purpose.</p>

<p>JavaNCSS can also be used out of an Ant <code>build.xml</code> script as it
comes bundled with an Ant task written by Steve Jernigan.
The JavaNCSS Ant Task is documented on a <a href="JavancssAntTask.html">separate page</a>.</p>

<p>You can always find the newest version of this page at: <a href="http://javancss.codehaus.org/">http://javancss.codehaus.org/</a>
(was previously at <a href="http://www.kclee.de/clemens/java/javancss/">http://www.kclee.de/clemens/java/javancss/</a>).</p>



<h2><a name="features"></a>Features and Metrics JavaNCSS Provides</h2>
<ul>
<li>Metrics can be applied to global-, class-, or function-level.</li>

<li>Non Commenting Source Statements (NCSS).</li>

<li>Cyclomatic Complexity Number (McCabe metric).</li>

<li>Packages, classes, functions and inner classes are counted.</li>

<li>Number of formal Javadoc comments per class and method.</li>

<li>Average values are calculated.</li>

<li>Command line driven.</li>

<li>A GUI is provided for better output browsing as well as the
integration of JavaNCSS in a project manager and class browser
named <a href="http://www.kclee.de/clemens/jacob/">Jacob</a> for
easy selection of input source files.</li>

<li>XML output (optional).</li>

<li>XSLT stylesheets provided for further generation of HTML,
     and SVG reports and as a basis for your own custom
     reports.</li>

<li>Ant task (written by Steve Jernigan).</li>

<li>Support for Java 1.5 syntax (generics, enums, etc.).</li>

<li>100% Pure Java.</li>

<li>Free software (GNU GPL).</li>

</ul>



<h2><a name="requirements"></a>System Requirements</h2>
	Java JDK &gt;= 1.4.1


<h2><a name="download"></a>Downloading</h2>
<a href="javancss-33.54.zip">JavaNCSS Version 33.54</a>

<h4>Downloading Java Development Kit</h4>

<p>JavaNCSS requires the Java Developer's Kit (JDK) Version 1.4 or above. Since you already seem to have Java source code
you want to measure, I assume you already have a JDK :).
If not, you can download it
via web from <a href="http://java.com/download/">Javasoft</a>.
Follow the link to "JDK 1.4" and download the version applicable to your
environment.
<br />&nbsp;</p>


<h2><a name="links"></a>Related Links</h2>

<ul>
<li><a href="http://www.kclee.de/clemens/java/index.html">Clemens' Java Page</a> - Other Java stuff I did.</li>

<li><a href="http://sonar.codehaus.org/">Sonar</a> is an open source code quality management platform. Sonar enables to collect, analyze and report metrics on source code. Sonar not only offers consolidated reporting on and across projects throughout time, but it becomes the central place to manage code quality. With no complex infrastructure, Sonar fulfills needs in terms of code quality, whether it is to make an audit or implement a continuous improvement process.</li>

<li><a href="http://www.kclee.de/clemens/jacob/index.html">Jacob</a> - A development tool that embeds
the Emacs editor. It can also be used as a gui-frontend for JavaNCSS.</li>

<li><a href="http://www.kclee.de/clemens/psp/">Clemens' PSP Page</a> - JavaNCSS can be used as a
tool for the Personal Software Process (PSP).</li>

<li><a href="http://www.suntest.com/JavaCC/">JavaCC</a> - A Java compiler compiler
from SunTest. JavaNCSS is done with it.</li>

<li><a href="http://www.clarkware.com/software/JDepend.html">JDepend</a> -
Mike Clark's JDepend
"traverses a set of Java source file directories and generates design quality metrics for each Java package.
JDepend allows you to automatically measure the quality of a design in terms of its extensibility,
reusability, and maintainability to effectively manage and
control package dependencies."

<p>While JavaNCSS simply lets you know how much source code
you have to deal with (ncss metric), JDepend informs you
about the package structure of your code and helps you
spotting weaknesses in your global code organization,
e.g. identifying dependency cycles, creating a few independent
packages on which most other package rely on, etc.</p>

<p>You can use JDepend as a quantitative
measurement tool as well.</p>
</li>

<li><a href="http://proguard.sourceforge.net/">ProGuard</a> -
ProGuard is a class file shrinker and obfuscator
by
Eric Lafortune. It differs from
other offerings in its simple and compact configuration, its speed,
and its modest memory usage.

<p>ProGuard is an application which has made use of JavaNCSS
in an unexpected way: "... I've taken the liberty of
using JavaNCSS for producing test results with ProGuard, and,
vice versa, for producing statistics about ProGuard. You can
find the references in the Results section and the Quality
section respectively. The latter section shows how I have
integrated JavaNCSS in a nightly build process."</p></li>
<!--<li>
<a href="http://207.92.81.101/rsm.htm">RSM, C &amp; C++ Code Quality and
Metrics Tool</a> - A similar tool as JavaNCSS written in C for the C language.</li>-->

<li><a href="http://www.dwheeler.com/sloccount/">SLOCCount</a>
is a set of tools for counting physical Source Lines of Code
(SLOC) in a large number of languages of a potentially large
set of programs. This suite of tools was used in a
Estimating Linux's Size to measure the SLOC of an entire
Linux distribution. It runs on Linux, Windows, and hopefully
on other systems too. To run on Windows, you have to install
Cygwin first.
</li>

<li><a href="http://www.cetus-links.org/oo_metrics.html">Cetus Links:
Object-Orientation / Metrics</a></li>
</ul>

</body>
</html>
