<html>
<head>
   <link rel="SHORTCUT ICON" href="favjavancss.ico" />
   <title>JavaNCSS - Related Links</title>
</head>
<body>
<table>
<tr>
<td>
<center><h1>JavaNCSS - Related Links</h1></center>
</td>
</tr>
</table>

<h2><a name="links"></a>Related Links</h2>

<ul>
<li><a href="http://mojo.codehaus.org/javancss-maven-plugin/">JavaNCSS Maven Plugin</a>: JavaNCSS as a Maven plugin.</li>

<li><a href="http://www.kclee.de/clemens/java/index.html">Clemens' Java Page</a> - Other Java stuff I did.</li>

<li><a href="http://sonar.codehaus.org/">Sonar</a> is an open source code quality management platform. Sonar enables to collect, analyze and report metrics on source code. Sonar not only offers consolidated reporting on and across projects throughout time, but it becomes the central place to manage code quality. With no complex infrastructure, Sonar fulfills needs in terms of code quality, whether it is to make an audit or implement a continuous improvement process.</li>

<li><a href="http://www.kclee.de/clemens/jacob/index.html">Jacob</a> - A development tool that embeds
the Emacs editor. It can also be used as a gui-frontend for JavaNCSS.</li>

<li><a href="http://www.kclee.de/clemens/psp/">Clemens' PSP Page</a> - JavaNCSS can be used as a
tool for the Personal Software Process (PSP).</li>

<li><a href="http://www.suntest.com/JavaCC/">JavaCC</a> - A Java compiler compiler
from SunTest. JavaNCSS is done with it.</li>

<li><a href="http://www.clarkware.com/software/JDepend.html">JDepend</a> -
Mike Clark's JDepend
"traverses a set of Java source file directories and generates design quality metrics for each Java package.
JDepend allows you to automatically measure the quality of a design in terms of its extensibility,
reusability, and maintainability to effectively manage and
control package dependencies."

<p>While JavaNCSS simply lets you know how much source code
you have to deal with (ncss metric), JDepend informs you
about the package structure of your code and helps you
spotting weaknesses in your global code organization,
e.g. identifying dependency cycles, creating a few independent
packages on which most other package rely on, etc.</p>

<p>You can use JDepend as a quantitative
measurement tool as well.</p>
</li>

<li><a href="http://proguard.sourceforge.net/">ProGuard</a> -
ProGuard is a class file shrinker and obfuscator
by
Eric Lafortune. It differs from
other offerings in its simple and compact configuration, its speed,
and its modest memory usage.

<p>ProGuard is an application which has made use of JavaNCSS
in an unexpected way: "... I've taken the liberty of
using JavaNCSS for producing test results with ProGuard, and,
vice versa, for producing statistics about ProGuard. You can
find the references in the Results section and the Quality
section respectively. The latter section shows how I have
integrated JavaNCSS in a nightly build process."</p></li>
<!--<li>
<a href="http://207.92.81.101/rsm.htm">RSM, C &amp; C++ Code Quality and
Metrics Tool</a> - A similar tool as JavaNCSS written in C for the C language.</li>-->

<li><a href="http://www.dwheeler.com/sloccount/">SLOCCount</a>
is a set of tools for counting physical Source Lines of Code
(SLOC) in a large number of languages of a potentially large
set of programs. This suite of tools was used in a
Estimating Linux's Size to measure the SLOC of an entire
Linux distribution. It runs on Linux, Windows, and hopefully
on other systems too. To run on Windows, you have to install
Cygwin first.
</li>

<li><a href="http://www.cetus-links.org/oo_metrics.html">Cetus Links:
Object-Orientation / Metrics</a></li>
</ul>

</body>
</html>
